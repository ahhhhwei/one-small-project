{"version":3,"sources":["src/pages/TableList/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useRequest } from 'ahooks';\r\nimport { Table, Card, Button, Modal, Form, Input, Space, Select, Tag, message } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport type { ColumnsType } from 'antd/es/table';\r\n\r\ninterface Student {\r\n  key: string;\r\n  studentId: string;\r\n  name: string;\r\n  college: string;\r\n  phone: string;\r\n  Sex: string;\r\n  age: number;\r\n  address: string;\r\n  zipCode: string;\r\n}\r\n\r\ninterface CourseGrade {\r\n  Cname: string;\r\n  Grade: number; \r\n}\r\n\r\nconst StudentManagement: React.FC = () => {\r\n  const [students, setStudents] = useState<Student[]>([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [editingStudent, setEditingStudent] = useState<Student | null>(null);\r\n  const [form] = Form.useForm();\r\n  const [gradeModalVisible, setGradeModalVisible] = useState(false);\r\n  const [selectedStudent, setSelectedStudent] = useState<Student | null>(null);\r\n  const [grades, setGrades] = useState<CourseGrade[]>([]);\r\n\r\n  // 使用 useRequest 获取学生数据\r\n  const { data, loading, error } = useRequest(async () => {\r\n    const response = await fetch('http://localhost:8080/api/students');\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const jsonData = await response.json();\r\n    return jsonData.data.map((student: Student) => ({\r\n      ...student,\r\n      key: student.studentId,\r\n    }));\r\n  }, {\r\n    onSuccess: (transformedData) => {\r\n      setStudents(transformedData);\r\n    },\r\n    onError: (err) => {\r\n      console.error('Error fetching students:', err);\r\n      message.error('获取学生信息失败，请稍后再试！');\r\n    },\r\n  });\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error: {error.message}</p>;\r\n\r\n  const showModal = (student?: Student) => {\r\n    if (student) {\r\n      setEditingStudent(student);\r\n      form.setFieldsValue(student);\r\n    } else {\r\n      setEditingStudent(null);\r\n      form.resetFields();\r\n    }\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const showGrade = async (student: Student) => {\r\n    try {\r\n      const response = await fetch(`http://127.0.0.1:8080/api/student_courses/${student.studentId}`);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const jsonData = await response.json();\r\n      setGrades(jsonData.data);\r\n      setSelectedStudent(student);\r\n      setGradeModalVisible(true);\r\n    } catch (error) {\r\n      message.error('获取学生成绩失败，请稍后再试');\r\n      console.error('Error fetching grades:', error);\r\n    }\r\n  };\r\n\r\n  const handleOk = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      if (editingStudent) {\r\n        // 编辑现有学生\r\n        setStudents(students.map(student =>\r\n          student.key === editingStudent.key\r\n            ? { ...values, key: student.key }\r\n            : student\r\n        ));\r\n      } else {\r\n        // 添加新学生\r\n        const newStudent = {\r\n          ...values,\r\n          key: Date.now().toString(),\r\n        };\r\n        setStudents([...students, newStudent]);\r\n      }\r\n      setIsModalVisible(false);\r\n      form.resetFields();\r\n    } catch (error) {\r\n      console.error('Validation failed:', error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = (key: string) => {\r\n    Modal.confirm({\r\n      title: '确认删除',\r\n      content: '确定要删除这条学生信息吗？',\r\n      onOk: () => {\r\n        setStudents(students.filter(student => student.key !== key));\r\n      },\r\n    });\r\n  };\r\n\r\n  const columns: ColumnsType<Student> = [\r\n    {\r\n      title: '学号',\r\n      dataIndex: 'studentId',\r\n      key: 'studentId',\r\n      sorter: (a, b) => a.studentId.localeCompare(b.studentId),\r\n    },\r\n    {\r\n      title: '姓名',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: '学院',\r\n      dataIndex: 'college',\r\n      key: 'college',\r\n      filters: Array.from(new Set(students.map(s => s.college))).map(college => ({\r\n        text: college,\r\n        value: college,\r\n      })),\r\n      onFilter: (value, record) => record.college === value,\r\n    },\r\n    {\r\n      title: '性别',\r\n      dataIndex: 'Sex',\r\n      key: 'Sex',\r\n    },\r\n    {\r\n      title: '年龄',\r\n      dataIndex: 'age',\r\n      key: 'age',\r\n      sorter: (a, b) => a.age - b.age,\r\n    },\r\n    {\r\n      title: '电话',\r\n      dataIndex: 'phone',\r\n      key: 'phone',\r\n    },\r\n    {\r\n      title: '地址',\r\n      dataIndex: 'address',\r\n      key: 'address',\r\n    },\r\n    {\r\n      title: '邮编',\r\n      dataIndex: 'zipCode',\r\n      key: 'zipCode',\r\n    },\r\n    {\r\n      title: '操作',\r\n      key: 'action',\r\n      render: (_, record) => (\r\n        <Space>\r\n          <Button \r\n            type=\"link\" \r\n            icon={<EditOutlined />} \r\n            onClick={() => showModal(record)}\r\n          >\r\n            编辑\r\n          </Button>\r\n          <Button\r\n            type=\"link\" \r\n            icon={<EditOutlined />} \r\n            onClick={() => showGrade(record)}\r\n          >\r\n            学生成绩\r\n          </Button>\r\n          <Button \r\n            type=\"link\" \r\n            danger \r\n            icon={<DeleteOutlined />} \r\n            onClick={() => handleDelete(record.key)}\r\n          >\r\n            删除\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const gradeColumns: ColumnsType<CourseGrade> = [\r\n    {\r\n      title: '课程名',\r\n      dataIndex: 'Cname',\r\n      key: 'Cname',\r\n      sorter: (a, b) => a.Cname.localeCompare(b.Cname),\r\n    },\r\n    {\r\n      title: '成绩',\r\n      dataIndex: 'Grade',\r\n      key: 'Grade',\r\n      render: (text, record) => {\r\n          return <span style={{ color: record.Grade < 60 ? 'red' : 'inherit' }}>{record.Grade}</span>;\r\n      },\r\n      sorter: (a, b) => a.Grade - b.Grade,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div style={{ padding: 24 }}>\r\n      <Card title=\"学生信息管理\" extra={\r\n        <Button \r\n          type=\"primary\" \r\n          icon={<PlusOutlined />} \r\n          onClick={() => showModal()}\r\n        >\r\n          添加学生\r\n        </Button>\r\n      }>\r\n        <Table \r\n          columns={columns} \r\n          dataSource={students} \r\n          pagination={{ \r\n            pageSize: 10,\r\n            showTotal: (total) => `共 ${total} 条记录`,\r\n          }}\r\n        />\r\n      </Card>\r\n\r\n      <Modal\r\n        title={editingStudent ? \"编辑学生信息\" : \"添加学生\"}\r\n        open={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={() => {\r\n          setIsModalVisible(false);\r\n          form.resetFields();\r\n        }}\r\n        width={720}\r\n      >\r\n        <Form\r\n          form={form}\r\n          layout=\"vertical\"\r\n          initialValues={editingStudent || {}}\r\n        >\r\n          <Form.Item\r\n            name=\"studentId\"\r\n            label=\"学号\"\r\n            rules={[{ required: true, message: '请输入学号' }]}\r\n          >\r\n            <Input\r\n              placeholder=\"请输入学号\"\r\n              disabled={!!editingStudent} \r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"name\"\r\n            label=\"姓名\"\r\n            rules={[{ required: true, message: '请输入姓名' }]}\r\n          >\r\n            <Input\r\n              placeholder=\"请输入姓名\"\r\n              disabled={!!editingStudent}\r\n             />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"college\"\r\n            label=\"学院\"\r\n            rules={[{ required: true, message: '请输入学院' }]}\r\n          >\r\n            <Input placeholder=\"请输入学院\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"Sex\"\r\n            label=\"性别\"\r\n            rules={[{ required: true, message: '请选择性别' }]}\r\n          >\r\n            <Select>\r\n              <Select.Option value=\"male\">男</Select.Option>\r\n              <Select.Option value=\"female\">女</Select.Option>\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"age\"\r\n            label=\"年龄\"\r\n            rules={[\r\n              { required: false, message: '请输入年龄' },\r\n              { type: 'number', min: 0, max: 120, message: '请输入有效年龄' }\r\n            ]}\r\n          >\r\n            <Input type=\"number\" placeholder=\"请输入年龄\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"phone\"\r\n            label=\"电话\"\r\n            rules={[\r\n              { required: true, message: '请输入电话' },\r\n              { pattern: /^1[3-9]\\d{9}$/, message: '请输入有效的手机号码' }\r\n            ]}\r\n          >\r\n            <Input placeholder=\"请输入电话\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"address\"\r\n            label=\"地址\"\r\n            rules={[{ required: true, message: '请输入地址' }]}\r\n          >\r\n            <Input.TextArea placeholder=\"请输入地址\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"zipCode\"\r\n            label=\"邮编\"\r\n            rules={[\r\n              { required: true, message: '请输入邮编' },\r\n              { pattern: /^\\d{6}$/, message: '请输入有效的邮编' }\r\n            ]}\r\n          >\r\n            <Input placeholder=\"请输入邮编\" />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n\r\n      <Modal\r\n        title={`${selectedStudent?.name} 的成绩`}\r\n        open={gradeModalVisible}\r\n        onOk={() => setGradeModalVisible(false)}\r\n        onCancel={() => setGradeModalVisible(false)}\r\n        width={720}\r\n      >\r\n        <Table\r\n          columns={gradeColumns}\r\n          dataSource={grades}\r\n          pagination={false}\r\n        />\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentManagement;"],"names":[],"mappings":"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"}